[tox]
requires = 
    tox>=4.11.3
    virtualenv>=20.24.5
    setuptools>=69.0.2
    setuptools-rust>=1.8.1
    pip-tools>=7.3.0
#patchelf>=0.17.2;platform_system=='Linux'
           pytest >= 7.4.4,
           pytest-timeout >= 2.3.1
           pytest-mock >= 3.12.0,
           mypy>=1.10.0;implementation_name=="cpython"
           maturin>=1.5.0
envlist = clean, linters, py310, flake8, coverage
#, docs
#isolated_build = True
toxworkdir = {toxinidir}/../target/tox-fix
temp_dir = {toxinidir}/../target/tox-fix
skip_missing_interpreters = True


[testenv]
system_site_packages = False
deps = -r build.requirements.txt
    pytest
    pytest-cov
    pytest-mock
    pytest-timeout
    pytest-xdist[psutil]
commands = pytest {posargs:tests}
allowlist_externals = maturin, pip-compile, pytest
usedevelop=True

[testenv:coverage]
skip_install = False
commands =
    pytest -n auto --cov=python/joshua --cov-append --cov-report=xml:tests/coverage.xml --cov-report=html --cov-report=term-missing {posargs:tests}
deps =
    pytest
    polars
    coverage >= 7.3.2
    pytest-cov
    pytest-mock
    pytest-timeout
    pytest-xdist[psutil]
setenv =
    COVERAGE_FILE=coverage.xml
depends = py310, py311, py312
#depends = py310, py311
#depends = py3

[testenv:py]
system_site_packages = True
allowlist_externals = pip-compile
commands =
    pip-compile pyproject.toml > requirements.txt

[testenv:.pkg]
system_site_packages = True

# Linters
[testenv:flake8]
skip_install = True
deps =
    flake8
    flake8-bugbear
    flake8-docstrings
    flake8-typing-imports
    pep8-naming
commands =
    flake8 python/joshua/ tests/

[testenv:pylint]
skip_install = False
commands =
    black --check --diff python/joshua/
#check-manifest
    mypy --install-types --non-interactive
    mypy --show-error-codes
#python -m build .
# may be useful in checking the package, but fails
# right now and as we're not posting to pypy, don't
# need for ourselves, yet.
#twine check dist/*
deps =
    black
#check-manifest
    flake8
    flake8-bugbear
# returns different results on different systems
#    isort
    types-boto3
    mypy>=1.10.0; implementation_name == "cpython"
    readme_renderer
#twine

[testenv:doc8]
skip_install = True
deps =
    sphinx
    doc8
commands =
    doc8 docs/source/

[testenv:bandit]
skip_install = True
deps = bandit[toml] >= 1.7.4
    setuptools
    importlib-metadata[toml] >= 4.12.0
#  severity level, low or higher
# -r recursive
# --ini use this file for config
# -v verbose
commands = bandit -r . --severity-level=low --confidence-level=medium --ini tox.ini -c pyproject.toml

[testenv:pre-commit]
skip_install = True
deps =
    {[testenv:linters]deps}
commands =
    {[testenv:linters]commands}

[testenv:linters]
skip_install = True
deps =
    {[testenv:black]deps}
    {[testenv:flake8]deps}
    {[testenv:pylint]deps}
    {[testenv:mypy]deps}
# we just don't have the docs to pass yet
#{[testenv:doc8]deps}
    {[testenv:readme]deps}
    {[testenv:bandit]deps}
commands =
    {[testenv:black]commands}
    {[testenv:flake8]commands}
    {[testenv:pylint]commands}
    {[testenv:mypy]commands}
# we just don't have the docs to pass yet
#    {[testenv:doc8]commands}
    {[testenv:readme]commands}
    {[testenv:bandit]commands}

# Documentation
[testenv:docs]
deps =
    -rdocs/source/requirements.txt
commands =
    sphinx-build -E -W -c docs/source -b html docs/source/ docs/build/html

[testenv:serve-docs]
skip_install = True
changedir = docs/build/html
deps =
commands =
    python -m http.server {posargs}

[testenv:readme]
allowlist_externals = maturin
deps =
    readme_renderer
commands =
    maturin develop

[testenv:run-flake8]
skip_install = True
commands =
    flake8 python/joshua tests examples
deps =
    flake8
    flake8-bugbear

[testenv:run-format]
skip_install = True
commands =
# returns different results on different systems
#    isort --profile = black python/joshua tests examples
    black .
deps =
    black
# returns different results on different systems
#    isort

[testenv:mypy]
skip_install = True
deps =
    types-boto3
    typing
    mypy>=1.10.0; implementation_name == "cpython"
commands =
    mypy --install-types --non-interactive
    mypy --show-error-codes

[testenv:black]
skip_install = True
deps =
    typing
    black
commands =
    black --check --diff python/joshua/

[testenv:clean]
deps = coverage[toml]
skip_install = True
setenv =
    COVERAGE_FILE=tests/coverage.xml
commands = coverage erase

[bandit]
exclude = ./.tox,./build,./dist,./tests,./venv
recursive = True
targets = .

[gh]
python =
    3.10 = py310, type
    3.11 = py311, type
    3.12 = py312, type

[gh-actions]
python =
    3.10: py310, mypy
    3.11: py311, mypy
    3.12: py312, mypy
